
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  credits       Int             @default(10)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Course {
  id String @id @default(uuid())
  name String
  image String
  views Int? @default(0)
  units Unit[]
  
}

model Unit {
  id String @id @default(uuid())
  courseId String

  name String
  course Course @relation(fields: [courseId] , references: [id])
  chapters Chapter[]

  @@index([courseId] , name : "courseId")
}

model Chapter {
  id String @id @default(uuid())
  unitId String

  name String
  youtubeSearchQuery String
  videoId String?
  summary String? @db.VarChar(3000)
  unit Unit @relation(fields: [unitId] , references: [id])
  Questions Question[]

  @@index([unitId] , name : "unitId")
}

model Question {
   id String @id @default(uuid())
   chatperId String

   question String @db.VarChar(3000)
   answer String @db.VarChar(3000)
   options String @db.VarChar(3000)
   chapter Chapter @relation(fields: [chatperId] , references: [id])

   @@index([chatperId] , name : "chapterId")
}